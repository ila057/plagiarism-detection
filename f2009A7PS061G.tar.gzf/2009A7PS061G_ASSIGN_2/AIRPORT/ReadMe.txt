

---This assignment is submitted by Praveen Prakash Oak(2009A7PS061G)
I have Interacted with the following people while completing this assignment
1.Aniket Panse
2.Rachit Maheshwari
3.Chaitanya Datye

---The program can be compiled by typing make after going into the assignment folder and run by typing ./exec
---The input should be given in a file called input.txt(a file by that name is already provided in that folder, if a new file is to be given replace the given file)

---There is a file called waitingPassengers.txt that is generated by the program and needs to be deleted after every execution

--Once the whole program executes the boarding pass files are created in the same folder and are named by their respective ticketNo

---The only part that is not done is the part right at the end where the airport gives a call for any passenger in restroom to board, the program always calls the first passenger and not the passenger in the restroom

---The general structure that I have followed in implementing this assignment is:

1.I have used struct to build all data structures
2.I have taken all information from file and stored it inside a data structure and have passed a pointer to this structure to all processes
3.I created the children of airport in such a way that all children that need to know the pids of their siblings for sync purposes get it while they are created itself.
4.Because of point 3, the airport is not needed for  synchronising the children.
5.Each child signals the next whenever necessary and uses sleep to ensure clashes or over crowding do not occur
6.For the children of children I have used the same model except for BaggageCounter where I have involved the parent
7.Since I have used sleep, the execution goes about a little slowly
8.For IPC I have used files

9.I found synchrnisation the toughest part of the assignment and if I had more time I would have tried to use shared memory to implement the part I could not complete(I have mentioned it above).

-------------------DESCRIPTION OF FILES--------------------



1.boarding.h--contains the boarding process

2.baggageCounter.h---contains all functions relating to Baggage Counter and its children

3.functions.h---contains all the auxillary functions that do not involve reading created data structures or sync functions

4.immigration.h -- contains the immigration process and its children

5.inputoutput.h --- contains all functions related to reading input and declaring data structures

6.parentchild.h---contains the airport process

7.processFunctions.h---contains all functions directly called by processes and that involve data strucures

8.securityCheck.h---contains the security check process and its children

9.waitingLounge.h---contains the waiting lounge process and its children


